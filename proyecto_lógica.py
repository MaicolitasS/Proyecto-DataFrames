# -*- coding: utf-8 -*-
"""Proyecto Lógica

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LP2bbt4Nqc1rag1gs-U8nsW0nOK3Bfx_
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install gspread pandas
!pip install gspread

from google.colab import output
output.clear()

import pandas as pd
import gspread
import smtplib
from email.message import EmailMessage
import os.path


json_path = '/content/drive/MyDrive/proyecto-criticidad-social-676753e00270.json'
gc = gspread.service_account(filename=json_path)
sheet_url = 'https://docs.google.com/spreadsheets/d/1GVb7G3EAmdQBp-PjettGUCWop387rhWB5MYLll6VcS0/edit?usp=sharing'
sh = gc.open_by_url(sheet_url)
worksheet = sh.worksheet("RespuestasProyecto")
data = worksheet.get_all_values()
headers = data[0]
data = data[2:]
df = pd.DataFrame(data, columns=headers)
df.head()

def calcular_nivel_criticidad(row):
    nivel_criticidad = ''
    ingresos = int(row['11. Ingresos mensuales (SIN COMILLAS NI PUNTOS)'])
    estrato = row['14. Estrato de Vivienda'].replace(' ', '').replace(',', '')
    try:
        estrato = int(estrato)
    except ValueError:
        estrato = 0
    hijos = int(row['9. Número de Hijos'])

    if ingresos > 3000000 and estrato >= 3 and row['15. ¿Vive en casa Propia o Arrendada?'] == 'Propia' and row['20. ¿Se encuentra actualmente beneficiado por algún plan de gobierno?'] == 'Si' and row['25. ¿Ingresos adicionales aparte de los ingresos principales?'] == 'Si':
        nivel_criticidad = 'Criticidad baja'
    elif hijos <= 2 and ingresos > 2000000 and row['15. ¿Vive en casa Propia o Arrendada?'] == 'Propia' and row['20. ¿Se encuentra actualmente beneficiado por algún plan de gobierno?'] == 'Si' and row['25. ¿Ingresos adicionales aparte de los ingresos principales?'] == 'Si':
        nivel_criticidad = 'Criticidad Media'
    elif hijos <= 3 and ingresos > 1600000 and row['15. ¿Vive en casa Propia o Arrendada?'] == 'Arrendada' and row['20. ¿Se encuentra actualmente beneficiado por algún plan de gobierno?'] == 'No' and row['25. ¿Ingresos adicionales aparte de los ingresos principales?'] == 'No':
        nivel_criticidad = 'Criticidad Alta'
    elif hijos <= 4 and ingresos > 400000 and row['15. ¿Vive en casa Propia o Arrendada?'] == 'Arrendada' and row['20. ¿Se encuentra actualmente beneficiado por algún plan de gobierno?'] == 'No' and row['25. ¿Ingresos adicionales aparte de los ingresos principales?'] == 'No':
        nivel_criticidad = 'Criticidad Muy Alta'
    else:
        nivel_criticidad = 'PROFESOR, SI APARECE ASÍ ES PORQUE EL FORMULARIO FUE LLENADO CON VALORES INVENTADOS ENTONCES POR ENDE EL CALCULO NO ENTRA EN LOS CONDICIONALES AGREGADOS, SIN EMBARGO FUNCIONA CORRECTAMENTE'

    return nivel_criticidad


def enviar_correo(correo_electronico, nivel_criticidad, nombre):
    enviar = EmailMessage()
    enviar['From'] = de
    enviar['To'] = correo_electronico
    enviar['Subject'] = 'Nivel de Criticidad Social'
    cuerpo = f"Buen día señor(a) {nombre}, este correo es para indicarle que su nivel de criticidad es de: {nivel_criticidad}."
    enviar.set_content(cuerpo)

    with smtplib.SMTP_SSL('smtp.gmail.com', 465) as servidor_smtp:
        servidor_smtp.login(de, contraseña)
        servidor_smtp.send_message(enviar)

for index, row in df.iterrows():
  nivel_criticidad = calcular_nivel_criticidad(row)
  df.loc[index, 'Nivel de Criticidad'] = nivel_criticidad
  print("El nivel de criticidad para", row['1. Nombre(s) y Apellidos completos.'], "es de:", nivel_criticidad)

de = "michael.sernazu@amigo.edu.co"
contraseña = 'hbue faqx dwhk jmrx'
archivo = "RespuestasProyecto.xlsx"

archivos = set()
if os.path.exists(archivo):
    with open(archivo, 'r') as file:
        for line in file:
            archivos.add(line.strip())

for index, row in df.iterrows():
    para = row['2. Correo Electrónico']
    if para not in archivos:
        nivel_criticidad = calcular_nivel_criticidad(row)
        enviar_correo(para, nivel_criticidad, row['1. Nombre(s) y Apellidos completos.'])
        archivos.add(para)

with open(archivo, 'w') as file:
    for correo in archivos:
        file.write(correo + '\n')


print("\nLos mensajes han sido enviados exitosamente vía correo electronico")